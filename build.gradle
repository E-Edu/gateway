plugins {
  id 'org.springframework.boot' version '2.2.5.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'java'
  id 'checkstyle'
  id "com.gorylenko.gradle-git-properties" version "2.2.2"
}

group = 'de.the-morpheus.e-du'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.9'

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
  compile.exclude module: 'spring-boot-starter-logging'
}

repositories {
  mavenCentral()
}

dependencies {

  /* Utility */
  implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  compile 'com.jcabi:jcabi-manifests:0.7.5'
  implementation 'com.auth0:java-jwt:3.10.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.12.0'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.0'
  implementation ('io.sentry:sentry-log4j2:1.7.30') {
    exclude group: "org.apache.logging.log4j"
  }

  /* GraphQL */
  implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:7.0.0'
  implementation 'com.graphql-java:graphql-java-tools:5.2.4'
  compile group: 'com.graphql-java-kickstart', name: 'playground-spring-boot-starter', version: '7.0.0'

  /* Spring */
  implementation ('org.springframework.boot:spring-boot-starter') {
    exclude group: "commons-logging", module: "commons-logging"
    exclude module: "spring-boot-starter-logging"
  }

  developmentOnly ('org.springframework.boot:spring-boot-devtools'){
    exclude group: "commons-logging", module: "commons-logging"
    exclude module: "spring-boot-starter-logging"
  }

  compile (group: 'org.springframework', name: 'spring-webmvc', version: '5.2.5.RELEASE') {
    exclude group: "commons-logging", module: "commons-logging"
    exclude module: "spring-boot-starter-logging"
  }

  /* Test */
  testImplementation 'org.springframework.security:spring-security-test'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}

test {
  useJUnitPlatform()
}


bootJar {
  manifest {
    attributes 'Implementation-Version': project.version.toString()
    attributes 'Implementation-Title': project.name.toString()
    attributes 'Build-Time': System.currentTimeMillis()
  }
}